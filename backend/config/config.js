require('dotenv').config();

const config = {
  env: process.env.NODE_ENV || 'development',
  port: process.env.PORT || 5000,
  mongoUri: process.env.MONGODB_URI,
  jwt: {
    secret: process.env.JWT_SECRET || 'your-secret-key',
    expiresIn: process.env.JWT_EXPIRES_IN || '1d'
  },
  email: {
    host: process.env.EMAIL_HOST || 'smtp.gmail.com',
    port: process.env.EMAIL_PORT || 587,
    secure: process.env.EMAIL_SECURE === 'true',
    auth: {
      user: process.env.EMAIL_USER,
      pass: process.env.EMAIL_PASS
    }
  },
  bitcoin: {
    network: process.env.BTC_NETWORK || 'testnet',
    apiKey: process.env.BTC_API_KEY
  },
  paytm: {
    merchantId: process.env.PAYTM_MERCHANT_ID,
    merchantKey: process.env.PAYTM_MERCHANT_KEY
  },
  paypal: {
    clientId: process.env.PAYPAL_CLIENT_ID,
    clientSecret: process.env.PAYPAL_CLIENT_SECRET,
    mode: process.env.PAYPAL_MODE || 'sandbox'
  },
  referralReward: process.env.REFERRAL_REWARD || '0.001',
  minWithdrawal: process.env.MIN_WITHDRAWAL || '0.001',
  maxWithdrawal: process.env.MAX_WITHDRAWAL || '1.0',
  withdrawalFee: process.env.WITHDRAWAL_FEE || '0.0001',
  miningReward: process.env.MINING_REWARD || '0.0001',
  miningInterval: process.env.MINING_INTERVAL || 3600000, // 1 hour in milliseconds
  adminEmail: process.env.ADMIN_EMAIL || 'admin@example.com',
  adminPassword: process.env.ADMIN_PASSWORD || 'admin123',
  supportEmail: process.env.SUPPORT_EMAIL || 'support@example.com',
  smtpHost: process.env.SMTP_HOST || 'smtp.gmail.com',
  smtpPort: process.env.SMTP_PORT || 587,
  smtpUser: process.env.SMTP_USER || 'your-email@gmail.com',
  smtpPass: process.env.SMTP_PASS || 'your-app-password',
  cloudinaryCloudName: process.env.CLOUDINARY_CLOUD_NAME || 'your-cloud-name',
  cloudinaryApiKey: process.env.CLOUDINARY_API_KEY || 'your-api-key',
  cloudinaryApiSecret: process.env.CLOUDINARY_API_SECRET || 'your-api-secret',
  stripeSecretKey: process.env.STRIPE_SECRET_KEY || 'your-stripe-secret-key',
  stripeWebhookSecret: process.env.STRIPE_WEBHOOK_SECRET || 'your-stripe-webhook-secret',
  awsAccessKeyId: process.env.AWS_ACCESS_KEY_ID || 'your-aws-access-key',
  awsSecretAccessKey: process.env.AWS_SECRET_ACCESS_KEY || 'your-aws-secret-key',
  awsRegion: process.env.AWS_REGION || 'us-east-1',
  awsBucketName: process.env.AWS_BUCKET_NAME || 'your-bucket-name',
  redisUrl: process.env.REDIS_URL || 'redis://localhost:6379',
  redisPassword: process.env.REDIS_PASSWORD || 'your-redis-password',
  redisPort: process.env.REDIS_PORT || 6379,
  redisHost: process.env.REDIS_HOST || 'localhost',
  redisDb: process.env.REDIS_DB || 0,
  redisTtl: process.env.REDIS_TTL || 3600,
  redisPrefix: process.env.REDIS_PREFIX || 'bitcoin-cloud-mining:',
  redisNamespace: process.env.REDIS_NAMESPACE || 'bitcoin-cloud-mining',
  redisKeyPrefix: process.env.REDIS_KEY_PREFIX || 'bitcoin-cloud-mining:',
  redisKeySeparator: process.env.REDIS_KEY_SEPARATOR || ':',
  redisKeySuffix: process.env.REDIS_KEY_SUFFIX || '',
  redisKeyFormat: process.env.REDIS_KEY_FORMAT || '{prefix}:{key}:{suffix}',
  redisKeyPattern: process.env.REDIS_KEY_PATTERN || '*',
  redisKeyExpiry: process.env.REDIS_KEY_EXPIRY || 3600,
  redisKeyMaxLength: process.env.REDIS_KEY_MAX_LENGTH || 1000,
  redisKeyMinLength: process.env.REDIS_KEY_MIN_LENGTH || 1,
  redisKeyCharset: process.env.REDIS_KEY_CHARSET || 'utf8',
  redisKeyEncoding: process.env.REDIS_KEY_ENCODING || 'utf8',
  redisKeyDecoding: process.env.REDIS_KEY_DECODING || 'utf8',
  redisKeyCompression: process.env.REDIS_KEY_COMPRESSION || false,
  redisKeyCompressionLevel: process.env.REDIS_KEY_COMPRESSION_LEVEL || 6,
  redisKeyCompressionThreshold: process.env.REDIS_KEY_COMPRESSION_THRESHOLD || 1024,
  redisKeyCompressionAlgorithm: process.env.REDIS_KEY_COMPRESSION_ALGORITHM || 'gzip',
  redisKeyCompressionOptions: process.env.REDIS_KEY_COMPRESSION_OPTIONS || {},
  redisKeyCompressionCallback: process.env.REDIS_KEY_COMPRESSION_CALLBACK || null,
  redisKeyCompressionAsync: process.env.REDIS_KEY_COMPRESSION_ASYNC || false,
  redisKeyCompressionSync: process.env.REDIS_KEY_COMPRESSION_SYNC || true,
  redisKeyCompressionPromise: process.env.REDIS_KEY_COMPRESSION_PROMISE || false,
  redisKeyCompressionStream: process.env.REDIS_KEY_COMPRESSION_STREAM || false,
  redisKeyCompressionBuffer: process.env.REDIS_KEY_COMPRESSION_BUFFER || false,
  redisKeyCompressionString: process.env.REDIS_KEY_COMPRESSION_STRING || false,
  redisKeyCompressionObject: process.env.REDIS_KEY_COMPRESSION_OBJECT || false,
  redisKeyCompressionArray: process.env.REDIS_KEY_COMPRESSION_ARRAY || false,
  redisKeyCompressionNumber: process.env.REDIS_KEY_COMPRESSION_NUMBER || false,
  redisKeyCompressionBoolean: process.env.REDIS_KEY_COMPRESSION_BOOLEAN || false,
  redisKeyCompressionNull: process.env.REDIS_KEY_COMPRESSION_NULL || false,
  redisKeyCompressionUndefined: process.env.REDIS_KEY_COMPRESSION_UNDEFINED || false,
  redisKeyCompressionFunction: process.env.REDIS_KEY_COMPRESSION_FUNCTION || false,
  redisKeyCompressionSymbol: process.env.REDIS_KEY_COMPRESSION_SYMBOL || false,
  redisKeyCompressionDate: process.env.REDIS_KEY_COMPRESSION_DATE || false,
  redisKeyCompressionRegExp: process.env.REDIS_KEY_COMPRESSION_REGEXP || false,
  redisKeyCompressionError: process.env.REDIS_KEY_COMPRESSION_ERROR || false,
  redisKeyCompressionMap: process.env.REDIS_KEY_COMPRESSION_MAP || false,
  redisKeyCompressionSet: process.env.REDIS_KEY_COMPRESSION_SET || false,
  redisKeyCompressionWeakMap: process.env.REDIS_KEY_COMPRESSION_WEAKMAP || false,
  redisKeyCompressionWeakSet: process.env.REDIS_KEY_COMPRESSION_WEAKSET || false,
  redisKeyCompressionPromise: process.env.REDIS_KEY_COMPRESSION_PROMISE || false,
  redisKeyCompressionGenerator: process.env.REDIS_KEY_COMPRESSION_GENERATOR || false,
  redisKeyCompressionGeneratorFunction: process.env.REDIS_KEY_COMPRESSION_GENERATOR_FUNCTION || false,
  redisKeyCompressionAsyncGenerator: process.env.REDIS_KEY_COMPRESSION_ASYNC_GENERATOR || false,
  redisKeyCompressionAsyncGeneratorFunction: process.env.REDIS_KEY_COMPRESSION_ASYNC_GENERATOR_FUNCTION || false,
  redisKeyCompressionAsyncFunction: process.env.REDIS_KEY_COMPRESSION_ASYNC_FUNCTION || false,
  redisKeyCompressionClass: process.env.REDIS_KEY_COMPRESSION_CLASS || false,
  redisKeyCompressionClassMethod: process.env.REDIS_KEY_COMPRESSION_CLASS_METHOD || false,
  redisKeyCompressionClassStaticMethod: process.env.REDIS_KEY_COMPRESSION_CLASS_STATIC_METHOD || false,
  redisKeyCompressionClassProperty: process.env.REDIS_KEY_COMPRESSION_CLASS_PROPERTY || false,
  redisKeyCompressionClassStaticProperty: process.env.REDIS_KEY_COMPRESSION_CLASS_STATIC_PROPERTY || false,
  redisKeyCompressionClassPrivateMethod: process.env.REDIS_KEY_COMPRESSION_CLASS_PRIVATE_METHOD || false,
  redisKeyCompressionClassPrivateStaticMethod: process.env.REDIS_KEY_COMPRESSION_CLASS_PRIVATE_STATIC_METHOD || false,
  redisKeyCompressionClassPrivateProperty: process.env.REDIS_KEY_COMPRESSION_CLASS_PRIVATE_PROPERTY || false,
  redisKeyCompressionClassPrivateStaticProperty: process.env.REDIS_KEY_COMPRESSION_CLASS_PRIVATE_STATIC_PROPERTY || false,
  redisKeyCompressionClassPrivateField: process.env.REDIS_KEY_COMPRESSION_CLASS_PRIVATE_FIELD || false,
  redisKeyCompressionClassPrivateStaticField: process.env.REDIS_KEY_COMPRESSION_CLASS_PRIVATE_STATIC_FIELD || false,
  redisKeyCompressionClassPrivateMethod: process.env.REDIS_KEY_COMPRESSION_CLASS_PRIVATE_METHOD || false,
  redisKeyCompressionClassPrivateStaticMethod: process.env.REDIS_KEY_COMPRESSION_CLASS_PRIVATE_STATIC_METHOD || false,
  redisKeyCompressionClassPrivateProperty: process.env.REDIS_KEY_COMPRESSION_CLASS_PRIVATE_PROPERTY || false,
  redisKeyCompressionClassPrivateStaticProperty: process.env.REDIS_KEY_COMPRESSION_CLASS_PRIVATE_STATIC_PROPERTY || false,
  redisKeyCompressionClassPrivateField: process.env.REDIS_KEY_COMPRESSION_CLASS_PRIVATE_FIELD || false,
  redisKeyCompressionClassPrivateStaticField: process.env.REDIS_KEY_COMPRESSION_CLASS_PRIVATE_STATIC_FIELD || false
};

module.exports = config;